  image: docker:latest
  services:
    - docker:dind
  stages: 
  #  - build
    - deploy
  before_script:
        - apk add --no-cache curl jq python3 py3-pip
        - pip install awscli
        - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
        - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"
  variables:
    REPOSITORY_URL: $DOCKER_REGISTRY/$APP_NAME
    TASK_DEFINITION_NAME: workforce-planner-task
    CLUSTER_NAME: workforce-planner-cluster
    SERVICE_NAME: workforce-planner-service
  #build:
    #stage: build
    #script:
        #- echo "Building image..."
        #- docker build -t workforce-planner:latest APITest02
        #- echo "Tagging image..."
        #- docker tag workforce-planner:latest $REPOSITORY_URL:latest
        #- echo "Pushing image..."
        #- docker push $REPOSITORY_URL:latest
    #only:
        #- main
        #- develop
  deploy:
    stage: deploy
    script:
        - echo "Registering new container definition..."
        - REVISION=$(aws ecs register-task-definition --cli-input-json file://workforce-planning-task-defination.json | sed -n '/"revision":\ [0-9]*/p' | tr -d '"revision":' | tr -d ',')
        - echo $REVISION
        - LAST_INDEX_TO_DISABLE=$( expr $REVISION - 1 )
        - echo $LAST_INDEX_TO_DISABLE
        #- echo "Updating the service..."
        #- aws ecs update-service --region "${AWS_DEFAULT_REGION}" --cluster "${CLUSTER_NAME}" --service "${SERVICE_NAME}" --task-definition "${TASK_DEFINITION_NAME}" --force-new-deployment
        - |+ 
          for i in $(seq 1 $LAST_INDEX_TO_DISABLE)
          do 
            sleep 0.5s
            echo $i
            #aws ecs deregister-task-definition --task-definition workforce-planner-task:$i
          done
    only:
        - main
